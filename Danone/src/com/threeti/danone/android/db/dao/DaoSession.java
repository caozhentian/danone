package com.threeti.danone.android.db.dao;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.database.Database;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.threeti.danone.common.bean.Student;
import com.threeti.danone.common.bean.SpittingUp;
import com.threeti.danone.common.bean.Stool;
import com.threeti.danone.common.bean.Mvn;
import com.threeti.danone.common.bean.Feed;
import com.threeti.danone.common.bean.Crying;
import com.threeti.danone.common.bean.Dm;
import com.threeti.danone.common.bean.Notification;

import com.threeti.danone.android.db.dao.StudentDao;
import com.threeti.danone.android.db.dao.SpittingUpDao;
import com.threeti.danone.android.db.dao.StoolDao;
import com.threeti.danone.android.db.dao.MvnDao;
import com.threeti.danone.android.db.dao.FeedDao;
import com.threeti.danone.android.db.dao.CryingDao;
import com.threeti.danone.android.db.dao.DmDao;
import com.threeti.danone.android.db.dao.NotificationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig studentDaoConfig;
    private final DaoConfig spittingUpDaoConfig;
    private final DaoConfig stoolDaoConfig;
    private final DaoConfig mvnDaoConfig;
    private final DaoConfig feedDaoConfig;
    private final DaoConfig cryingDaoConfig;
    private final DaoConfig dmDaoConfig;
    private final DaoConfig notificationDaoConfig;

    private final StudentDao studentDao;
    private final SpittingUpDao spittingUpDao;
    private final StoolDao stoolDao;
    private final MvnDao mvnDao;
    private final FeedDao feedDao;
    private final CryingDao cryingDao;
    private final DmDao dmDao;
    private final NotificationDao notificationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        spittingUpDaoConfig = daoConfigMap.get(SpittingUpDao.class).clone();
        spittingUpDaoConfig.initIdentityScope(type);

        stoolDaoConfig = daoConfigMap.get(StoolDao.class).clone();
        stoolDaoConfig.initIdentityScope(type);

        mvnDaoConfig = daoConfigMap.get(MvnDao.class).clone();
        mvnDaoConfig.initIdentityScope(type);

        feedDaoConfig = daoConfigMap.get(FeedDao.class).clone();
        feedDaoConfig.initIdentityScope(type);

        cryingDaoConfig = daoConfigMap.get(CryingDao.class).clone();
        cryingDaoConfig.initIdentityScope(type);

        dmDaoConfig = daoConfigMap.get(DmDao.class).clone();
        dmDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        studentDao = new StudentDao(studentDaoConfig, this);
        spittingUpDao = new SpittingUpDao(spittingUpDaoConfig, this);
        stoolDao = new StoolDao(stoolDaoConfig, this);
        mvnDao = new MvnDao(mvnDaoConfig, this);
        feedDao = new FeedDao(feedDaoConfig, this);
        cryingDao = new CryingDao(cryingDaoConfig, this);
        dmDao = new DmDao(dmDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);

        registerDao(Student.class, studentDao);
        registerDao(SpittingUp.class, spittingUpDao);
        registerDao(Stool.class, stoolDao);
        registerDao(Mvn.class, mvnDao);
        registerDao(Feed.class, feedDao);
        registerDao(Crying.class, cryingDao);
        registerDao(Dm.class, dmDao);
        registerDao(Notification.class, notificationDao);
    }
    
    public void clear() {
        studentDaoConfig.getIdentityScope().clear();
        spittingUpDaoConfig.getIdentityScope().clear();
        stoolDaoConfig.getIdentityScope().clear();
        mvnDaoConfig.getIdentityScope().clear();
        feedDaoConfig.getIdentityScope().clear();
        cryingDaoConfig.getIdentityScope().clear();
        dmDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public SpittingUpDao getSpittingUpDao() {
        return spittingUpDao;
    }

    public StoolDao getStoolDao() {
        return stoolDao;
    }

    public MvnDao getMvnDao() {
        return mvnDao;
    }

    public FeedDao getFeedDao() {
        return feedDao;
    }

    public CryingDao getCryingDao() {
        return cryingDao;
    }

    public DmDao getDmDao() {
        return dmDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

}
